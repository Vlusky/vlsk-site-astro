---
import BaseLayout from "../layouts/BaseLayout.astro"
import Gallery from "../components/interactive/Gallery.svelte";
import * as gallery from "./worksList"
---

<BaseLayout pageTitle="works" display="fullscreen" backgroundStyle="#292929">
  <Gallery kind="image" title="Illustration" elements={gallery.illust} client:idle/>
  <Gallery kind="youtube" title="Motion" elements={gallery.motion} client:idle/>

  <!-- <h1>
    Illustration
    <span class="material-symbols-rounded toggle">chevron_right</span>
  </h1> 
  <div class="gallery shadow hidden">
    {
      gallery.illust.map((image) => (
        <a target="_blank" href={image.link || image.src}>
          <img loading="lazy" class="shadow" src={image.src} alt={image.alt} />
        </a>
      ))
    }
    <div class="hide">hide<span class="material-symbols-rounded">expand_less</span></div>
  </div>

  <h1>
    Graphics
    <span class="material-symbols-rounded toggle">chevron_right</span>
  </h1>
  <div class="gallery shadow hidden">
    {
      gallery.design.map((image) => (
        <a target="_blank" href={image.link || image.src}>
          <img loading="lazy" class="shadow" src={image.src} alt={image.alt} />
        </a>
      ))
    }
    <div class="hide">hide<span class="material-symbols-rounded">expand_less</span></div>
  </div>

  <h1>
    Motion
    <span class="material-symbols-rounded toggle">chevron_right</span>
  </h1>
  <div class="gallery shadow hidden">
    {
      gallery.motion.map((id) => (
      <iframe class="youtube shadow" src={`https://www.youtube.com/embed/${id}?controls=0`} title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
      ))
    }
    <div class="hide">hide<span class="material-symbols-rounded">expand_less</span></div>
  </div>


  <h1>
    Videos
    <span class="material-symbols-rounded toggle">chevron_right</span>
  </h1>
  <div class="gallery shadow hidden">
    {
      gallery.video.map((id) => (
      <iframe class="youtube shadow" src={`https://www.youtube.com/embed/${id}?controls=0`} title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
      ))
    }
    <div class="hide">hide<span class="material-symbols-rounded">expand_less</span></div>
  </div>

  <h1>
    Music
    <span class="material-symbols-rounded toggle">chevron_right</span>
  </h1>
  <div class="gallery shadow hidden">
    {
      gallery.songs.map((id) => (
        <iframe class="soundcloud shadow" scrolling="no" frameborder="no" allow="autoplay" src={`https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/${id}&color=%23ff5500&auto_play=false&hide_related=true&show_comments=false&show_user=true&show_reposts=false&show_teaser=true&visual=true`}></iframe>
      ))
    }
  </div> -->

</BaseLayout>
<script>
  // querySelectorAll does not return HTMLElement by default
  const toggleButtons = document.querySelectorAll<HTMLElement>(".toggle")
  const toggleButtonInside = document.querySelectorAll(".hide") 
  const galleries = document.querySelectorAll<HTMLElement>(".gallery")
  
  // check to see if the code had done a fucky wucky
  if (toggleButtons.length != galleries.length) {
    console.log("buttons and gallery has different length!")
    console.log(toggleButtons, galleries)
  }
  // because the button is on top of the gallery, the index should line up
  // fool proof? heck no. but it's good enough and is better to wrap around my head
  // than managing a relationship of element ID's
  for (let i = 0; i < toggleButtons.length; i++) {
    const button = toggleButtons[i]
    const gallery = galleries[i]
    const buttonInside = toggleButtonInside[i]

    button.addEventListener(("click"), () => {
      if (button.innerHTML === "expand_more") {
        button.innerHTML = "chevron_right"
        gallery.classList.add("hidden")

      } else if (button.innerHTML === "chevron_right") {
        button.innerHTML = "expand_more"
        gallery.classList.remove("hidden")
      }
    })
    
    buttonInside.addEventListener(("click"), () => {
      // chevron_right = hidden, same deal as above
      button.innerHTML = "chevron_right"
      gallery.classList.add("hidden")
    })
  }
</script>
<style>
  h1 {
    padding: 1rem;
  }

  .gallery {
    background-color: rgb(202, 5, 104);
    overflow-x: auto;
    overflow-y:hidden;
    white-space: nowrap;
    margin-top: 0.5rem;
    margin-bottom: 1rem;
    padding-bottom: 0px;
  }

  .hidden {
    display: none;
  }

  .gallery > a {
    position: relative;
    height: 10px;
    margin: 0px;
  }
  
  .toggle {
    cursor: pointer;
    -webkit-user-select: none; /* Safari */
    -ms-user-select: none; /* IE 10 and IE 11 */
    user-select: none; /* Standard syntax */
  }

  .gallery > a > img {
    margin: 0.25rem;
    margin-bottom: 0px;
    margin-left: 0px;
    height: 20rem;
    transition: all 0.2s;
  }
  .gallery > a:first-child > img {
    margin-left: 0.25rem;
  }
  
  .gallery:has(a:hover) img {
    opacity: 0.5;
    filter: blur(5px);
  }

  .gallery:has(a:hover) img:hover {
    opacity: 1;
    transform: scale(1.02);
    cursor: pointer;
    filter: blur(0);
  }

  .gallery .hide {
    display: none;
  }

  .gallery > iframe {
    height: 20rem;
    max-width: calc(100% - 0.5rem);

    margin-top: 0.25rem;
    margin-left: 0.4rem;
  }

  .youtube {
    aspect-ratio: 16/9 !important;
  }

  .soundcloud {
    aspect-ratio: 1
  }


  @media only screen and (max-width: 620px) {
    .gallery {
      white-space: normal;
      text-align:center;
      height: 100%;
    }

    .gallery {
      overflow: visible;
    }

    .gallery > a > img {
      max-width: calc(100% - 0.5rem);
      max-height: 100vh;
      height: auto;
      margin: 0.25rem;
    }

    .gallery > iframe {
      height: auto;
      width: calc(100% - 0.5rem);
      margin: 0 !important;
      padding:0 ;
    }

    
    /* disable the epic gamer hover effect when on mobile */
    .gallery:has(a:hover) img {
      opacity: 1;
      filter: blur(0);
    }

    .gallery:has(a:hover) img:hover {
      opacity: 1;
      transform: scale(1.02);
      cursor: pointer;
      filter: blur(0);
    }

    .gallery > iframe:first-child {
      padding-top: 0.25rem;
    }

    .gallery .hide {
      display: flex;
      align-items: center;
      justify-content: center;
      position: sticky;
      z-index: 1;
      width:100%;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.479);
      height: 3rem;
    }
  }
  
</style>
